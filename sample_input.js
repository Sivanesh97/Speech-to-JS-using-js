let dictated = [
	// `variable person count = 2000` // After let until equals all are concatenated. equals => = type
	//     `let is Animating = 3`,
	//     `let exception = not a number`,
	//     `variable code = string #include<iostream.h>`,
	//     `operation 5 plus 10 plus 15`,
	//     `constant pi = 3.14`,
	//     `let is clock present = true`,
	//     `function color change`,
	//     `arguments name next id next object next is animating`,
	//     `variable b = list name next string age next 12 next time next true next false`,
	//     `constant pi = 3.14`,
	//     `let is clock present = true`,
	//     `close`,
	//     `console log hello world`,
	//     `close`,
	//     `function is animating`,
	//     `let is Animating = 3`,
	//     `let is number = not a number`,
	//     `variable code = string #include<iostream.h>`,
	//     `constant pi = 3.14`,
	//     `return 1`,
	//     `close`,
	//     `operation plus minus into by percentage increment decrement equals`,
	//     `operation plus equals 12 minus equals 36 into equals by equals percentage equals`,
	//     `operation equal to triple equals not equal to not triple equals greater than less than greater than equals less than equals`,
	//     `operation and or not`,
	//     `operation bitwise and bitwise or bitwise not left shift right shift`,
	//     `list `,
	//     `variable a = list 1 next 2 next 3 next 4`,
	//     `variable b = list name next string age next 12 next time next true next false`,
	//     `let d = object is animating = true next name = string sivanesh is in multi verse. next age = 12`,
	//     `close`,
	//     `comment hello world`,
	//     `comment paragraph`,
	//     `list `,
	//     `variable a = list 1 next 2 next 3 next 4`,
	//     `variable b = list name next string age next 12 next time next true next false`,
	//     `close`,
	//      `let is Animating = 3`,
	//      `let is number = not a number`,
	//      `object`,
	//      `close`,
	//      `function clock`,
	//      `arguments small tick next big tick next alarm`,
	//      `let a = 12`,
	//      `let e = object small tick = 5 next big tick = 12`,
	//      `close`,
	//      `close`,
	// 'state equals code name plus name standard minus dummy into 24 and 68 string hello world',
	// 'let name equals name plus name standard minus true into false dummy into 24 and 68 string hello world',
	// 'function function1',
	// 'let name equals 23',
	// 'variable age = true',
	// 'constant name equals string hello world',
	// 'close',
	// ARRAY
	// 'let list equals list string a lady comma true comma 1987 comma hello world',
	// 'name comma age comma d o b',
	// 'string hello world comma true',
	// '1 comma 2 comma 4',
	// 'close',
	// 'let a equals 65',
	// 'function name one',
	// 'function name two',
	// 'close',
	// 'let name equals string sivanesh',
	// 'close',
	// 'print string hello world'
	// 'let name equals a lady next true next 1987 next hello world',
	// 'let name equals 12',
	// 'let name equals object',
	// 'name one value string sivanesh',
	// 'age value 67',
	// 'date of birth value 1997',
	// 'is single value true',
	// 'name value object',
	// 'first name value string sivanesh',
	// 'second name value string developer',
	// // 'close',
	// 'second name value string developer',
	// 'another object value object',
	// 'name value 12',
	// 'close'
	// Object nesting Checker
	'person equals object',
	'first name value string sivanesh',
	'age value 21',
	'is married value false',
	// 'arr value list',
	// // Assignments alongside with objects are not handled
	// 'attributes value object height value 187',
	// 'height value 187',
	// 'weight value 87',
	'close',
	// 'close',
	// 'let checking equals string does goes out'
	'let name equals list hello world comma string hello world',
	'close',
	'name equals list hello world comma string hello world'
	// '1 comma 2 comma 34',
	// 'close',
	// 'name equals list hello world comma string hello world'
];
